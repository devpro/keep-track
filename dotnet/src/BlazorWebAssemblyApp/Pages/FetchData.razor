@page "/fetchdata"
@inject HttpClient Http
@inject KeepTrack.BlazorWebAssemblyApp.Authorization.ExternalAuthStateProvider externalAuthStateProvider

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (videoGames == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Title</th>
                <th>Year</th>
                <th>Platform</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var videoGame in videoGames)
            {
            <tr>
                <td>@videoGame.Id</td>
                <td>@videoGame.Title</td>
                <td>@videoGame.Year</td>
                <td>@videoGame.Platform</td>
            </tr>
            }
        </tbody>
    </table>
}

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    private VideoGameDto[] videoGames;

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationStateTask;
        var user = authState.User;

        var token = user.Identity.IsAuthenticated ? user.Claims.ToList().FirstOrDefault(x => x.Type == "Token") : null;
        if (token == null)
        {
            videoGames = new VideoGameDto[0];
            return;
        }

        Http.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token.Value);
        videoGames = await Http.GetFromJsonAsync<VideoGameDto[]>("api/video-games");
    }
}
